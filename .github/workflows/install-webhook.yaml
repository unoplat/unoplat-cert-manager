name: Install/Upgrade 

on:
  repository_dispatch:
    types: [install_unoplat_cert_manager]
  workflow_dispatch: 

jobs:
  install_civo:
    runs-on: ubuntu-latest

    steps:

    - uses: azure/setup-kubectl@v3
      id: install    


    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.11.1


    - uses: azure/k8s-set-context@v3
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

    - name: Print payload
      env:
        MESSAGE: ${{ github.event.client_payload.message }}
      run: echo $MESSAGE


    - name: Install jq
      run: sudo apt-get install jq

    - name: Add Helm repo
      run: helm repo add unoplat-cert-manager https://unoplat.github.io/unoplat-cert-manager

    - name: Update Helm repo
      run: helm repo update

    - name: Install latest pre-release version
      env:
        ROOT_CRT: ${{ secrets.ROOT_CRT }}
        DECRYPTED_ROOT_KEY: ${{ secrets.DECRYPTED_ROOT_KEY }}

      run: |
        version=$(helm search repo unoplat-cert-manager/cert-manager --versions --devel --output json | jq -r '.[0].version')
        helm upgrade --install unoplat-cert-manager --namespace unoplat-service-mesh unoplat-cert-manager/cert-manager --set installCRDs=true --version $version --devel --create-namespace
        kubectl create secret tls unoplat-service-mesh-ca-secret --cert="$ROOT_CRT" --key="$DECRYPTED_ROOT_KEY" -n unoplat-service-mesh
        kubectl create -f code/base-project/cluster-issuer.yaml -n unoplat-service-mesh
        kubectl create -f code/base-project/certificate.yaml -n unoplat-service-mesh


